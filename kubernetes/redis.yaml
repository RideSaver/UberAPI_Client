apiVersion: apps/v1
kind: StatefulSet
metadata:
    name: uber-redis
    namespace: client
spec:
    serviceName: uber-redis
    replicas: 1
    selector:
        matchLabels:
            app: uber-redis
    template:
        metadata:
            labels:
                app: uber-redis
        spec:
            initContainers:
                - name: uber-redis-config
                  image: redis:6.2.3-alpine
                  command: ["sh", "-c"]
                  args:
                      - |
                          cp /tmp/redis/redis.conf /etc/redis/redis.conf

                          echo "finding master..."
                          MASTER_FDQN=`hostname  -f | sed -e 's/redis-[0-9]\./redis-0./'`
                          if [ "$(redis-cli -h sentinel -p 5000 ping)" != "PONG" ]; then
                            echo "master not found, defaulting to redis-0"

                            if [ "$(hostname)" == "redis-0" ]; then
                              echo "this is redis-0, not updating config..."
                            else
                              echo "updating redis.conf..."
                              echo "slaveof $MASTER_FDQN 6379" >> /etc/redis/redis.conf
                            fi
                          else
                            echo "sentinel found, finding master"
                            MASTER="$(redis-cli -h sentinel -p 5000 sentinel get-master-addr-by-name mymaster | grep -E '(^redis-\d{1,})|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})')"
                            echo "master found : $MASTER, updating redis.conf"
                            echo "slaveof $MASTER 6379" >> /etc/redis/redis.conf
                          fi
                  volumeMounts:
                      - name: uber-redis-redis-config
                        mountPath: /etc/redis/
                      - name: uber-redis-config
                        mountPath: /tmp/redis/
            containers:
                - name: uber-redis
                  image: redis:7.0.5-alpine
                  command: ["redis-server"]
                  args: ["/etc/redis/redis.conf"]
                  ports:
                      - containerPort: 6379
                        name: redis
                  volumeMounts:
                      - name: data
                        mountPath: /data
                      - name: uber-redis-config
                        mountPath: /etc/redis/
            volumes:
                - name: uber-redis-redis-config
                  emptyDir: {}
                - name: uber-redis-config
                  configMap:
                      name: uber-redis-config
    volumeClaimTemplates:
        - metadata:
              name: uber-redis-data
          spec:
              accessModes: ["ReadWriteOnce"]
              storageClassName: "local-storage"
              resources:
                  requests:
                      storage: 500Mi
