apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "UberClient.fullname" . }}-redis
  labels:
    {{ include "UberClient.selectorLabels" . | nindent 4 }}
    app: redis
spec:
  serviceName: {{ include "UberClient.fullname" . }}-redis
  replicas: {{ .Values.redis.replicas }}
  selector:
    matchLabels:
      {{ include "UberClient.selectorLabels" . | nindent 6 }}
      app: redis
  template:
    metadata:
      labels:
        {{ include "UberClient.selectorLabels" . | nindent 8 }}
        app: redis
    spec:
      initContainers:
        - name: redis-config
          image: "{{- .Values.redis.image.name -}}:{{ .Values.redis.image.tag }}"
          command:
            - sh
            - '-c'
          args:
            - |
              cp /tmp/redis/redis.conf /etc/redis/redis.conf

              echo "finding master..."
              MASTER_FDQN=`hostname  -f | sed -e 's/{{ include "UberClient.fullname" . }}-redis-[0-9]\./{{ include "UberClient.fullname" . }}-redis-0./'`
              if [ "$(redis-cli -h sentinel -p 5000 ping)" != "PONG" ]; then
                echo "master not found, defaulting to redis-0"

                if [ "$(hostname)" == "{{ include "UberClient.fullname" . }}-redis-0" ]; then
                  echo "this is {{ include "UberClient.fullname" . }}-redis-0, not updating config..."
                else
                  echo "updating redis.conf..."
                  echo "slaveof $MASTER_FDQN 6379" >> /etc/redis/redis.conf
                fi
              else
                echo "sentinel found, finding master"
                MASTER="$(redis-cli -h sentinel -p 5000 sentinel get-master-addr-by-name mymaster | grep -E '(^{{ include "UberClient.fullname" . }}-redis-\d{1,})|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})')"
                echo "master found : $MASTER, updating redis.conf"
                echo "slaveof $MASTER 6379" >> /etc/redis/redis.conf
              fi
          volumeMounts:
            - name: node-config
              mountPath: /etc/redis/
            - name: redis-config
              mountPath: /tmp/redis/
      containers:
        - name: redis
          image: "{{- .Values.redis.image.name -}}:{{- .Values.redis.image.tag -}}"
          command:
            - redis-server
          args:
            - /etc/redis/redis.conf
          ports:
            - containerPort: 6379
              name: redis
            - containerPort: 6380
              name: redis-tls
          volumeMounts:
            - name: {{ include "UberClient.fullname" . }}-redis-data
              mountPath: /data
            - name: node-config
              mountPath: /etc/redis/
            - name: certs
              mountPath: /certs
          {{ with .Values.redis.resources }}
          resources:
            {{ with .requests }}
            requests:
              {{ omit . "storage" | toYaml | nindent 14 }}
            {{- end -}}
            {{ with .limits }}
            limits:
              {{ omit . "storage" | toYaml | nindent 14 }}
            {{- end -}}
            {{ if omit . "requests" "limits" }}
            {{ omit . "requests" "limits" | toYaml "omitempty" | nindent 12 }}
            {{ end }}
          {{ end }}
      volumes:
        - name: node-config
          emptyDir: {}
        - name: certs
          secret:
            secretName: {{ include "UberClient.fullname" . }}-redis-certificate
            optional: false
        - name: redis-config
          configMap:
            name: {{ include "UberClient.fullname" . }}-redis-conf
  volumeClaimTemplates:
    - metadata:
        name: {{ include "UberClient.fullname" . }}-redis-data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ default "local-storage" .Values.redis.storage.class }}
        {{ with .Values.redis.resources }}
        resources:
          {{ with .requests.storage }}
          requests:
            storage: {{ . }}
          {{ end }}
          {{ with .limits.storage }}
          limits:
            storage: {{ . }}
          {{ end }}
        {{ end }}
