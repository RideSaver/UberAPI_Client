apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "UberClient.fullname" . }}
  labels:
    {{- include "UberClient.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "UberClient.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "UberClient.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: certificate
          image: ubuntu:latest
          command:
            - sh
            - -c
            - |
              apt-get update
              apt-get install -y openssl ca-certificates
              openssl pkcs12 -export -out /pfx/certificate.pfx -inkey /certs/tls.key -in /certs/ca.crt -in /certs/tls.crt -passout pass:
              cp /certs/ca.crt /usr/local/share/ca-certificates
              update-ca-certificates
          volumeMounts:
            - name: certificate
              mountPath: /certs
            - name: pfx-certificate
              mountPath: /pfx
            - name: root-certificates
              mountPath: /etc/ssl/certs
      containers:
        - name: {{ include "UberClient.fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: pfx-certificate
              mountPath: /certs
              readOnly: true
            - name: root-certificates
              mountPath: /etc/ssl/certs
              readOnly: true
            - name: certificate
              mountPath: /redis
              readOnly: true
          env:
            - name: ASPNETCORE_Kestrel__Certificates__Default__Path
              value: /certs/certificate.pfx
      volumes:
        - name: certificate
          secret:
            secretName: {{ include "UberClient.fullname" . }}-certificate
            optional: false
        - name: pfx-certificate
          emptyDir: {}
        - name: root-certificates
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
